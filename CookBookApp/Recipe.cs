//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CookBookApp
{
    using Commands;
    using System.Collections.ObjectModel;
    using System.Windows.Forms;
    using System.Windows.Input;
    using ViewModels;

    public partial class Recipe
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Recipe()
        {
            this.RecipeIngredients = new ObservableCollection<RecipeIngredient>();
        }
    
        public int ID { get; set; }
        public string Name { get; set; }
        public int PreparationTime { get; set; }
        public int Servings { get; set; }
        public int? DifficultyLevel_ID { get; set; }
        public string Instruction { get; set; }
        public string AdditionalNotes { get; set; }
        public int CategoryID { get; set; }
        public int SubCategoryID { get; set; }
        public int RelatedAccountID { get; set; }
    
        public virtual Account Account { get; set; }
        public virtual DifficultyLevel DifficultyLevel { get; set; }
        public virtual SubCategory SubCategory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ObservableCollection<RecipeIngredient> RecipeIngredients { get; set; }
    }

    public partial class Recipe
    {
        #region Show Recipe Command
        public ICommand ShowRecipeCommand { get { return new RelayCommandParam(param => ExecuteShowRecipeCommand(param)); } }
        public void ExecuteShowRecipeCommand(object param)
        {
            var _locator = new ViewModelLocator();
            _locator.Main.CurrentViewModel = new DisplayRecipeViewModel(this, param);
        }
        #endregion

        #region Show Logged User Recipe Command

        public ICommand ShowLoggedUserRecipeCommand { get { return new RelayCommandParam(param => ExecuteCommand(param)); } }

        public void ExecuteCommand(object param)
        {
            var _locator = new ViewModelLocator();
            _locator.Main.CurrentViewModel = new DisplayLoggedUserRecipeViewModel(this, param);
        }

        #endregion
    }
}
